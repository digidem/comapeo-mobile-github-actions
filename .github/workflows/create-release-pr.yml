name: Create Release Branch and PR

on:
  workflow_dispatch:

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Read package.json version
        id: read_version
        run: |
          # Print the current directory and list files for debugging
          pwd
          ls -la

          # Read and print the current version from package.json
          version=$(node -p "require('./package.json').version")
          echo "Current version: $version"

          # Extract version components and increment minor version
          major=$(echo $version | cut -d. -f1)
          minor=$(echo $version | cut -d. -f2)
          patch=$(echo $version | cut -d. -f3 | cut -d- -f1)
          echo "Extracted version - Major: $major, Minor: $minor, Patch: $patch"

          new_minor=$((minor + 1))
          new_version="${major}.${new_minor}.0"
          echo "New version: $new_version"

          # Set the new version in an environment file
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Configure git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git status

      - name: Fetch latest changes
        run: |
          git fetch origin
          git checkout develop
          git pull origin develop

      - name: Create new branch
        id: create_branch
        run: |
          new_version=${{ env.VERSION }}
          echo "Creating new branch release/v$new_version"
          git checkout -b release/v$new_version || { echo "ERROR: Branch creation failed"; exit 1; }

      - name: Push new branch
        run: |
          new_version=${{ env.VERSION }}
          echo "Pushing new branch release/v$new_version"
          git push origin release/v$new_version || { echo "ERROR: Push failed"; exit 1; }

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'Create release branch release/v${{ env.VERSION }}'
          branch: release/v${{ env.VERSION }}
          base: deploy
          title: 'Release v${{ env.VERSION }}'
          body: 'This PR is for the release of version ${{ env.VERSION }}'
